# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-07-19 23:12
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                (
                    'id', models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    )
                ),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                (
                    'last_login',
                    models.DateTimeField(blank=True, null=True, verbose_name='last login')
                ),
                (
                    'is_superuser', models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status'
                    )
                ),
                (
                    'username', models.CharField(
                        error_messages={'unique': 'A user with that username already exists.'},
                        help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name='username'
                    )
                ),
                (
                    'first_name',
                    models.CharField(blank=True, max_length=30, verbose_name='first name')
                ),
                (
                    'last_name',
                    models.CharField(blank=True, max_length=30, verbose_name='last name')
                ),
                (
                    'is_staff', models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status'
                    )
                ),
                (
                    'is_active', models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                        verbose_name='active'
                    )
                ),
                (
                    'date_joined', models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name='date joined'
                    )
                ),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                (
                    'email',
                    models.EmailField(max_length=255, unique=True, verbose_name='Email address')
                ),
                (
                    'groups', models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.Group',
                        verbose_name='groups'
                    )
                ),
                (
                    'user_permissions', models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.Permission',
                        verbose_name='user permissions'
                    )
                ),
            ],
            options={
                'verbose_name_plural': 'users',
                'abstract': False,
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                (
                    'id', models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    )
                ),
                ('code', models.CharField(max_length=6, unique=True)),
                (
                    'service', models.CharField(
                        choices=[('IN', 'Check in'), ('OUT', 'Check out')], max_length=25
                    )
                ),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=1023)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationTag',
            fields=[
                (
                    'id', models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    )
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                (
                    'location', models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.Location'
                    )
                ),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                (
                    'id', models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    )
                ),
                ('name', models.CharField(max_length=255, unique=True)),
                ('available', models.BooleanField(default=True)),
                ('amount', models.PositiveIntegerField()),
                ('number_of_boxes', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                (
                    'id', models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    )
                ),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=1023)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('phase', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                (
                    'id', models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    )
                ),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('starts_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ends_at', models.DateTimeField(blank=True, null=True)),
                (
                    'plan', models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Plan'
                    )
                ),
                (
                    'user', models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='subscriptions',
                        to=settings.AUTH_USER_MODEL
                    )
                ),
            ],
        ),
        migrations.CreateModel(
            name='UnclaimedSubscription',
            fields=[
                (
                    'id', models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    )
                ),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('claimed', models.BooleanField(default=False)),
                (
                    'plan',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Plan')
                ),
            ],
        ),
        migrations.AddField(
            model_name='locationtag',
            name='subscription',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='core.Subscription'
            ),
        ),
    ]
